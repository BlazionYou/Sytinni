/**
 * MIT License
 *
 * Copyright (c) 2021 Sytner
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
**/

sampler gbuffer0 : register(s0);
float4 sharpenInfo : register(c85); // texel size, sharpen amount

float4 main
(
	in float4 position  : POSITION0,
	in float2 uv        : TEXCOORD0
)
: COLOR
{
	float4 center = tex2D(gbuffer0, uv + sharpenInfo.xy);
	float4 top = tex2D(gbuffer0, uv + sharpenInfo.xy + (sharpenInfo.xy * float2(0,-2)));
	float4 left = tex2D(gbuffer0, uv + sharpenInfo.xy + (sharpenInfo.xy * float2(-2,0)));
	float4 right = tex2D(gbuffer0, uv + sharpenInfo.xy + (sharpenInfo.xy * float2(2,0)));
	float4 bottom = tex2D(gbuffer0, uv + sharpenInfo.xy + (sharpenInfo.xy * float2(0,2)));
	float4 sharp = saturate(center + (4 * center - top - bottom - left - right) * sharpenInfo.z);
	return float4(sharp.rgb, 1.0);
}